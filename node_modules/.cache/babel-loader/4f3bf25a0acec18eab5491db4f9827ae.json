{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Downloads\\\\example-customers-app\\\\customers-app\\\\src\\\\containers\\\\CustomersContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppFrame from './../components/AppFrame';\nimport CustomersList from './../components/CustomersList';\nimport CustomersActions from './../components/CustomersActions';\nimport { fetchCustomers } from './../actions/fetchCustomers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomersContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleAddNew = () => {\n      this.props.history.push('/customers/new');\n    };\n\n    this.renderBody = customers => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomersList, {\n        customers: customers,\n        urlPath: 'customers/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomersActions, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleAddNew,\n          children: \"Nuevo Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n\n  componentDidMount() {\n    if (this.props.customers.length === 0) {\n      this.props.fetchCustomers();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AppFrame, {\n        header: 'Listado de clientes',\n        body: this.renderBody(this.props.customers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCustomersContainer.propTypes = {\n  fetchCustomers: PropTypes.func.isRequired,\n  customers: PropTypes.array.isRequired\n};\nCustomersContainer.defaultProps = {\n  customers: []\n};\n\nconst mapStateToProps = state => ({\n  customers: getCustomers(state)\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  fetchCustomers\n})(CustomersContainer));","map":{"version":3,"sources":["C:/Users/frodriguez/Downloads/example-customers-app/customers-app/src/containers/CustomersContainer.js"],"names":["React","Component","PropTypes","withRouter","connect","AppFrame","CustomersList","CustomersActions","fetchCustomers","CustomersContainer","handleAddNew","props","history","push","renderBody","customers","componentDidMount","length","render","propTypes","func","isRequired","array","defaultProps","mapStateToProps","state","getCustomers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,cAAT,QAA+B,6BAA/B;;;AAEA,MAAMC,kBAAN,SAAiCR,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAQvCS,YARuC,GAQxB,MAAM;AACjB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB;AACH,KAVsC;;AAAA,SAYvCC,UAZuC,GAY1BC,SAAS,iBAClB;AAAA,8BACI,QAAC,aAAD;AACI,QAAA,SAAS,EAAEA,SADf;AAEI,QAAA,OAAO,EAAE;AAFb;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,gBAAD;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,KAAKL,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbmC;AAAA;;AAEvCM,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKL,KAAL,CAAWI,SAAX,CAAqBE,MAArB,KAAgC,CAApC,EAAuC;AACnC,WAAKN,KAAL,CAAWH,cAAX;AACH;AACJ;;AAkBDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,qBAAlB;AACI,QAAA,IAAI,EAAE,KAAKJ,UAAL,CAAgB,KAAKH,KAAL,CAAWI,SAA3B;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA/BsC;;AAkC3CN,kBAAkB,CAACU,SAAnB,GAA+B;AAC3BX,EAAAA,cAAc,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UADJ;AAE3BN,EAAAA,SAAS,EAAEb,SAAS,CAACoB,KAAV,CAAgBD;AAFA,CAA/B;AAKAZ,kBAAkB,CAACc,YAAnB,GAAkC;AAC9BR,EAAAA,SAAS,EAAG;AADkB,CAAlC;;AAIA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,SAAS,EAAEW,YAAY,CAACD,KAAD;AADO,CAAL,CAA7B;;AAIA,eAAetB,UAAU,CAACC,OAAO,CAACoB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,kBAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppFrame from './../components/AppFrame';\nimport CustomersList from './../components/CustomersList';\nimport CustomersActions from './../components/CustomersActions';\nimport { fetchCustomers } from './../actions/fetchCustomers';\n\nclass CustomersContainer extends Component {\n\n    componentDidMount() {\n        if (this.props.customers.length === 0) {\n            this.props.fetchCustomers();\n        }\n    }\n    \n    handleAddNew = () => {\n        this.props.history.push('/customers/new');\n    }\n\n    renderBody = customers => (\n        <div>\n            <CustomersList \n                customers={customers} \n                urlPath={'customers/'} >\n            </CustomersList>\n            <CustomersActions>\n                <button onClick={this.handleAddNew}>Nuevo Cliente</button>\n            </CustomersActions>\n        </div>\n    )\n\n    render() {\n        return (\n            <div>\n                <AppFrame header={'Listado de clientes'}\n                    body={this.renderBody(this.props.customers)}></AppFrame>\n            </div>\n        );\n    }\n}\n\nCustomersContainer.propTypes = {\n    fetchCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired,\n};\n\nCustomersContainer.defaultProps = {\n    customers:  [ ]    \n};\n\nconst mapStateToProps = state => ({\n    customers: getCustomers(state)\n});\n\nexport default withRouter(connect(mapStateToProps, { fetchCustomers })(CustomersContainer));"]},"metadata":{},"sourceType":"module"}